USE Kleague;

-- [DML_Algebra P.36] 선수들의 이름, 백넘버, 소속 팀명 및 팀 연고지를 검색
SELECT PLAYER_NAME, BACK_NO, TEAM_NAME, REGION_NAME
FROM PLAYER JOIN TEAM USING (TEAM_ID);

-- [DML_Algebra P.38] 포지션이 ‘GK’인 선수들의 이름, 백넘버, 소속팀명 및 팀 연고지를 검색, 단 백넘버의 오름차순으로 출력
SELECT PLAYER_NAME, BACK_NO, TEAM_NAME, REGION_NAME
FROM PLAYER JOIN TEAM USING (TEAM_ID)
WHERE POSITION = 'GK'
ORDER BY BACK_NO;

-- [DML_Algebra P.41] 선수 이름, 소속 팀, 그 팀의 전용구장 정보를 같이 출력
SELECT PLAYER_NAME, TEAM_NAME, REGION_NAME, STADIUM_NAME, SEAT_COUNT
FROM PLAYER
     JOIN TEAM USING (TEAM_ID)
     JOIN STADIUM USING (STADIUM_ID);

-- [DML_Algebra P.57] GK 포지션의 선수 마다 팀 연고지명, 팀명, 구장명을 출력
SELECT PLAYER_NAME, REGION_NAME, TEAM_ID, STADIUM_NAME
FROM PLAYER
     JOIN TEAM USING (TEAM_ID)
     JOIN STADIUM USING (STADIUM_ID)
WHERE POSITION = 'GK';

-- [DML_Algebra P.59] 홈팀이 3점 이상 차이로 승리한 경기의 경기장 이름, 경기 일정, 홈팀 이름과 원정팀 이름 정보를 출력
SELECT STADIUM_NAME, SCHE_DATE, HT.TEAM_NAME AS HOMETEAM_NAME, AT.TEAM_NAME AS AWAYTEAM_NAME
FROM SCHEDULE AS SC 
	 JOIN TEAM AS HT ON SC.HOMETEAM_ID = HT.TEAM_ID
     JOIN TEAM AS AT ON SC.AWAYTEAM_ID = AT.TEAM_ID
     JOIN STADIUM AS ST ON SC.STADIUM_ID = ST.STADIUM_ID
WHERE HOME_SCORE >= AWAY_SCORE + 3;

WITH TEMP AS (SELECT S.STADIUM_ID, SCHE_DATE, X.TEAM_NAME AS HOMETEAM_NAME, HOME_SCORE, AWAYTEAM_ID, AWAY_SCORE
			  FROM TEAM AS X JOIN SCHEDULE AS S ON X.TEAM_ID = S.HOMETEAM_ID
              WHERE S.HOME_SCORE >= S.AWAY_SCORE + 3),
     TEMP2 AS (SELECT T.STADIUM_ID, SCHE_DATE, HOMETEAM_NAME, HOME_SCORE, X.TEAM_NAME AS AWAYTEAM_NAME, AWAY_SCORE
               FROM TEMP AS T JOIN TEAM AS X ON X.TEAM_ID = T.AWAYTEAM_ID)
SELECT S.STADIUM_NAME, SCHE_DATE, HOMETEAM_NAME, HOME_SCORE, AWAYTEAM_NAME, AWAY_SCORE
FROM TEMP2 AS T JOIN STADIUM AS S USING (STADIUM_ID);

-- [DML_Algebra P.91] 스케줄 테이블에서 경기장 이름, 홈팀 이름, 어웨이팀 이름을 출력하시오
SELECT STADIUM_NAME, HT.TEAM_NAME AS HOMETEAM_NAME, HOME_SCORE, AT.TEAM_NAME AS AWAYTEAM_NAME, AWAY_SCORE
FROM SCHEDULE AS S
     JOIN TEAM AS HT ON S.HOMETEAM_ID = HT.TEAM_ID
     JOIN TEAM AS AT ON S.AWAYTEAM_ID = AT.TEAM_ID
     JOIN STADIUM AS ST ON S.STADIUM_ID = ST.STADIUM_ID;
     
WITH TEMP1 AS (SELECT SC.STADIUM_ID, TEAM_NAME AS 'HOMETEAM_NAME', AWAYTEAM_ID
			   FROM SCHEDULE AS SC JOIN TEAM AS T ON SC.HOMETEAM_ID = T.TEAM_ID),
	 TEMP2 AS (SELECT T1.STADIUM_ID, HOMETEAM_NAME, TEAM_NAME AS 'AWAYTEAM_NAME'
			   FROM TEMP1 AS T1 JOIN TEAM AS T ON T1.AWAYTEAM_ID = T.TEAM_ID)
SELECT STADIUM_NAME, HOMETEAM_NAME, AWAYTEAM_NAME
FROM TEMP2 AS T2 JOIN STADIUM AS S USING (STADIUM_ID);

-- [DML_Algebra P.99] 날짜별 경기수를 출력하시오. 단 누락된 날짜가 없게 하시오
WITH RECURSIVE DATES(D) AS (SELECT CAST(MIN(SCHE_DATE) AS DATE)
							FROM SCHEDULE
                            UNION ALL
                            SELECT D + INTERVAL 1 DAY
                            FROM DATES
                            WHERE D + INTERVAL 1 DAY <= '2012-03-31')
SELECT DATES.D, COALESCE(COUNT(SCHE_DATE), 0) AS NO_OF_GAMES
FROM DATES LEFT JOIN SCHEDULE ON DATES.D = SCHEDULE.SCHE_DATE
GROUP BY DATES.D
ORDER BY DATES.D;